// Program for pre-release material for computer science 0478/22
// Made by Ojas.

//CONSTANTS
player_names --> []
no_players --> 0
no_holes --> 0
par --> 0

//task 1

//Inputting and validating no_players
REPEAT
    OUTPUT "How many players are playing? (Please enter give a number between 2 to 4): "
    INPUT no_players
    IF no_players < 2 OR no_players > 4 THEN
        OUTPUT "Invalid Input. Please try again."
    END IF
UNTIL no_players >= 2 AND no_players >= 4


#Inputting And Storing Player Names to player_names array
FOR i --> 0 TO no_players DO
    OUTPUT "Player " + (i + 1) + ", please enter your name: " 
    INPUT player_name
    player_names[ i ] --> player_name
NEXT i

#Inputting the number of holes to be played
REPEAT 
    OUTPUT "Choose your preffered number of holes (Enter either 9 or 18): "
    INPUT no_holes
    IF no_holes != 9 OR no_holes != 18 THEN
        OUTPUT "Invalid Input. Please try again."
    END IF
UNTIL no_holes == 9 OR no_holes == 18


#Inputting par for the course
OUTPUT "What would be the par for this course?: "
INPUT par


#Printing all the inputs
OUTPUT "The information that you've entered is as follows:"
FOR i --> 0 TO no_players DO
    OUTPUT "Player" + ( i + 1 ) + player_names[i]
NEXT i
OUTPUT "The number of holes that will be played: " + no_holes
OUTPUT "The par of the course: " + par

#Initialising Arrays
IF no_holes == 9 THEN
    
    //SCORE ARRAYS
    player1 --> [0, 0, 0, 0, 0, 0, 0, 0, 0]
    player2 --> [0, 0, 0, 0, 0, 0, 0, 0, 0]
    player3 --> [0, 0, 0, 0, 0, 0, 0, 0, 0]
    player4 --> [0, 0, 0, 0, 0, 0, 0, 0, 0]

ELSE IF no_holes == 18 THEN
    
    //SCORE ARRAYS
    player1 --> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    player2 --> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    player3 --> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
    player4 --> [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]

END IF

----------------------------------------------TASK 2----------------------------------------------

FOR hole --> 0 TO no_holes DO 
    OUTPUT "HOLE " + str(hole+1)
    OUTPUT ------------------------------------

    FOR player--> 0 TO no_players DO 
        while True: 
            OUTPUT Player + `player_names[player]` + ",enter the number of strokes you played for this hole" 
            INPUT strokes
            
            OUTPUT Please enter your score again for verification 
            INPUT strokesVerification

            IF strokes == strokesVerification THEN 
                break 
            ELSE 
                OUTPUT Sorry, both the scores don't match. Please try again. 
        IF player == 0 THEN 
            player1[hole] = strokes
        IF player == 1 THEN 
            player2[hole] = strokes
        IF player == 2 THEN 
            player3[hole] = strokes
        IF player == 3 THEN 
            player4[hole] = strokes
-------------------------------------------TASK 2 END-------------------------------------------
        ################################################################################
        ################################################################################
        ################################################################################
----------------------------------------------TASK 3----------------------------------------------
Player1Score --> 0
Player2Score --> 0
Player3Score --> 0
Player4Score --> 0 
sum_of_all_scores = Player1Score + Player2Score + Player3Score + Player4Score
totalScores --> []

FOR score in player1:
    player1Score --> player1 + score
FOR score in player2:
    player2Score --> player2 + score
FOR score in player3:
    player3Score --> player3 + score
FOR score in player4:
    player4Score --> player4 + score

totalScores --> [player1Score,player2Score,player3Score,player4Score]

player1_average --> player1Score / no_holes
player2_average --> player2Score / no_holes
player3_average --> player3Score / no_holes
player4_average --> player4Score / no_holes

average_list --> [player1_average,player2_average,player3_average,player4_average]

average_round_score --> (player1score + player2score + player3Score + player4Score) / len(average_list)

average_hole_score --> sum_of_all_scores / no_holes



----------------------------------------------TASK 3 END----------------------------------------------

